name: Go

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  create:
    tags:
      - v*

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: |
          go build -v .
          go clean

      - name: Test
        run: go test -v ./... -covermode=count -coverprofile=coverage.out

      - name: Convert coverage to lcov
        uses: jandelgado/gcov2lcov-action@v1.0.0
        with:
          infile: coverage.out
          outfile: coverage.lcov

      - name: Upload coverages
        uses: coverallsapp/github-action@v1.0.1
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov

      - name: Trigger Go Report Card
        run: curl -d "repo=github.com/fhopfensperger/json-log-to-human-readable" https://goreportcard.com/checks

      - name: Clean directory
        run: rm coverage.lcov

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set release version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "RELEASE_VERSION_WITHOUT_V=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: Set up QEMU
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: startsWith(github.ref, 'refs/tags/')
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push container image
        if: startsWith(github.ref, 'refs/tags/')
        env:
          QUAY_USER: ${{ secrets.QUAY_USER }}
          QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
        run: |
          docker login -u=$QUAY_USER -p=$QUAY_TOKEN quay.io
          docker buildx build \
          --platform linux/arm/v7,linux/amd64,linux/arm64 \
          --tag quay.io/fhopfensperger/json-log-to-human-readable:latest \
          --tag quay.io/fhopfensperger/json-log-to-human-readable:$RELEASE_VERSION_WITHOUT_V \
          -f Dockerfile \
          --build-arg BUILD_VERSION=$RELEASE_VERSION_WITHOUT_V \
          --push .